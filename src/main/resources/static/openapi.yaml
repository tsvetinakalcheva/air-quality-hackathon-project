openapi: 3.0.1
info:
  title: Air-quality-hackathon-project
  description: This is a hackathon project is part of Start^IT Java training.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: Air Quality
    description: Everything about Air Quality
  - name: User
    description: Everything about users
paths:

  '/api/v1/users':
    post:
      tags: [ User ]
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        default:
          description: successful operation
          content: { }


  '/api/v1/users/me':
    get:
      tags: [ User ]
      summary: Get the current user
      operationId: readUser
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                username: ivan

    put:
      tags: [ User ]
      summary: Updated user password
      description: This can only be done by the logged in user.
      operationId: updatePassword
      requestBody:
        description: Updated user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    delete:
      tags: [ User ]
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      responses:
        200:
          description: ok
          content: { }

  '/api/v1/users/me/settings':
    get:
      tags: [ User ]
      summary: Get the current settings
      operationId: readSettings
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsDTO'
              example:
                emailNotificationPeriod: THIRTY_MIN
                stationNames: [ Sofia ]
                quietHoursStart: 22:00
                quietHoursEnd: 8:00

    put:
      tags: [ User ]
      summary: Updated user settings
      description: This can only be done by the logged in user.
      operationId: updateSettings
      requestBody:
        description: Updated user settings
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserSettingsDTO'
        required: true
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsDTO'

  '/api/v1/air-quality':
    get:
      tags: [ Air Quality ]
      summary: Get the current Air Quality
      operationId: readAirQualityData
      parameters:
        - $ref: '#/components/parameters/city'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/until'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirQualityPage'
              example:
                totalPages: 1
                totalElements: 2
                number: 0
                size: 10
                numberOfElements: 2
                content:
                  - country: BG
                    stationName: AMS Druzhba -Sofia
                    stationCode: STA-BG0052A
                    unit: ug/m3
                    value: 0.33
                    timestamp: 2020-11-24T11:00:00Z
                    dangerLimit: 0.5
                    isDangerous: false
                    pollutant: C6H6
                  - country: BG
                    stationName: AMS Druzhba -Sofia
                    stationCode: STA-BG0052A
                    unit: ug/m3
                    value: 0.63
                    timestamp: 2020-11-24T10:00:00Z
                    dangerLimit: 0.5
                    isDangerous: true
                    pollutant: C6H6
                  - country: BG
                    stationName: AMS Druzhba -Sofia
                    stationCode: STA-BG0052A
                    unit: ug/m3
                    value: 0.63
                    timestamp: 2020-11-24T10:00:00Z
                    dangerLimit: 0.7
                    isDangerous: false
                    pollutant: SO2

  '/api/v1/air-quality/cities':
    get:
      tags: [ Air Quality ]
      summary: List the cities for which we have air-quality data
      operationId: listCities
      parameters:
        - $ref: '#/components/parameters/city'
        - $ref: '#/components/parameters/country'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - AMS Mladost-Sofia
                - AMS Druzhba -Sofia
                - AMS Hipodruma-Sofia
                - MS ExEA/Pavlovo-Sofia

components:
  parameters:
    city:
      in: query
      name: city
      description: >
        Part of the city name, case-insensitive. If this parameter
        is set, then only cities, matching the give string will be
        returned.
      required: false
      schema:
        type: string
    country:
      in: query
      name: country
      description: >
        2-letter country code, case-insensitive.
        If this parameter is specified, then only cities belonging to
        this country will be returned.
      required: false
      schema:
        type: string
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0
    size:
      name: size
      in: query
      required: false
      schema:
        type: integer
        default: 20
        minimum: 0
        maximum: 100
    since:
      name: since
      in: query
      required: false
      schema:
        type: string
        format: date-time
    until:
      name: until
      in: query
      required: false
      schema:
        type: string
        format: date-time

  schemas:
    AirQualityPage:
      type: object
      required: [ totalPages, totalElements, number, size, numberOfElements ]
      properties:
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
        size:
          type: integer
        numberOfElements:
          type: integer
        content:
          type: array
          items:
            $ref: '#/components/schemas/AirQualityData'

    AirQualityData:
      type: object
      properties:
        country:
          type: string
        stationName:
          type: string
        stationCode:
          type: string
        unit:
          type: string
        value:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
        dangerLimit:
          type: number
          format: double
        isDangerous:
          type: boolean
        pollutant:
          type: string
          enum: [CO, C6H5_CH3, PM10, H2S, NO, PM2_5, SO2, C6H6, NOX, NO2, NH3, NOX_as_NO2, O3]


    UserSettingsDTO:
      type: object
      required: [emailNotificationPeriod]
      properties:
        emailNotificationPeriod:
          type: string
          enum: [ NEVER, THIRTY_MIN, ONE_HOUR, TWO_HOURS, THREE_HOURS, ONE_TIME_PER_DAY]
          default: NEVER
        stationNames:
          type: array
          items:
            type: string
        quietHoursStart:
          type: string
          pattern: '^(([0]?[1-9]|1[0-2])(:)([0-5][0-9]))$'
        quietHoursEnd:
          type: string
          pattern: '^(([0]?[1-9]|1[0-2])(:)([0-5][0-9]))$'

    ChangePasswordRequest:
      type: object
      properties:
        currentPassword:
          format: password
          type: string
        newPassword:
          format: password
          type: string
        newPasswordAgain:
          format: password
          type: string

    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
        email:
          format: email
          type: string
        password:
          format: password
          type: string
        passwordAgain:
          format: password
          type: string

    UserResponse:
      type: object
      properties:
        username:
          type: string

